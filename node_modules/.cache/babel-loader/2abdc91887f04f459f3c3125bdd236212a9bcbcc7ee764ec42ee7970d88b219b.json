{"ast":null,"code":"// src/App.js\nimport React from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import{Container}from'@mui/material';import Header from'./components/Common/Header';import Footer from'./components/Common/Footer';import Login from'./components/Auth/Login';import Register from'./components/Auth/Register';import TaskList from'./components/Task/TaskList';import BookingForm from'./components/Task/BookingForm';import HospitalRegister from'./components/Hospital/HospitalRegister';import StaffProfile from'./components/Profile/StaffProfile';import HospitalProfile from'./components/Profile/HospitalProfile';import{AuthProvider,AuthContext}from'./contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Container,{sx:{marginTop:4,marginBottom:4},children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TaskList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/hospital-register\",element:/*#__PURE__*/_jsx(ProtectedRoute,{userType:\"Hospital\",children:/*#__PURE__*/_jsx(HospitalRegister,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/book/:taskId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{userType:\"Doctor\",children:/*#__PURE__*/_jsx(BookingForm,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ProfileRoute,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})}),/*#__PURE__*/_jsx(Footer,{})]})});}// Helper component to redirect based on user type\nfunction ProfileRoute(){const{user}=React.useContext(AuthContext);if(user.type==='Doctor'){return/*#__PURE__*/_jsx(StaffProfile,{});}else if(user.type==='Hospital'){return/*#__PURE__*/_jsx(HospitalProfile,{});}else{return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}}// ProtectedRoute component to guard private routes\nfunction ProtectedRoute(_ref){let{children,userType}=_ref;const{user}=React.useContext(AuthContext);if(!user){// If user is not authenticated, redirect to login\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(userType&&user.type!==userType){// If user type doesn't match, redirect to Listings\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return children;}export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Container","Header","Footer","Login","Register","TaskList","BookingForm","HospitalRegister","StaffProfile","HospitalProfile","AuthProvider","AuthContext","jsx","_jsx","jsxs","_jsxs","App","children","sx","marginTop","marginBottom","path","element","ProtectedRoute","userType","ProfileRoute","to","user","useContext","type","_ref"],"sources":["C:/Users/gagan/Documents/onduty-f-20240921T163350Z-001/onduty-f/src/App.js"],"sourcesContent":["// src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { Container } from '@mui/material';\nimport Header from './components/Common/Header';\nimport Footer from './components/Common/Footer';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport TaskList from './components/Task/TaskList';\nimport BookingForm from './components/Task/BookingForm';\nimport HospitalRegister from './components/Hospital/HospitalRegister';\nimport StaffProfile from './components/Profile/StaffProfile';\nimport HospitalProfile from './components/Profile/HospitalProfile';\nimport { AuthProvider, AuthContext } from './contexts/AuthContext';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Header />\n        <Container sx={{ marginTop: 4, marginBottom: 4 }}>\n          <Routes>\n            <Route path=\"/\" element={<TaskList />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/hospital-register\" element={<ProtectedRoute userType=\"Hospital\"><HospitalRegister /></ProtectedRoute>} />\n            <Route path=\"/book/:taskId\" element={<ProtectedRoute userType=\"Doctor\"><BookingForm /></ProtectedRoute>} />\n            <Route path=\"/profile\" element={<ProtectedRoute><ProfileRoute /></ProtectedRoute>} />\n            {/* Catch-all route redirects to Listings */}\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n          </Routes>\n        </Container>\n        <Footer />\n      </Router>\n    </AuthProvider>\n  );\n}\n\n// Helper component to redirect based on user type\nfunction ProfileRoute() {\n  const { user } = React.useContext(AuthContext);\n  if (user.type === 'Doctor') {\n    return <StaffProfile />;\n  } else if (user.type === 'Hospital') {\n    return <HospitalProfile />;\n  } else {\n    return <Navigate to=\"/\" />;\n  }\n}\n\n// ProtectedRoute component to guard private routes\nfunction ProtectedRoute({ children, userType }) {\n  const { user } = React.useContext(AuthContext);\n  \n  if (!user) {\n    // If user is not authenticated, redirect to login\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (userType && user.type !== userType) {\n    // If user type doesn't match, redirect to Listings\n    return <Navigate to=\"/\" />;\n  }\n\n  return children;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}