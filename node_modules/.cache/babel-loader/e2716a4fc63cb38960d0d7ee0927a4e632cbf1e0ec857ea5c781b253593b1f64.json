{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gagan\\\\Documents\\\\onduty-f-20240921T163350Z-001\\\\onduty-f\\\\src\\\\components\\\\Task\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// src/components/Task/TaskList.js\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Typography, Grid, Card, CardContent, CardActions, Button, Box } from '@mui/material';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport FilterBar from '../Filters/FilterBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const {\n    tasks,\n    hospitals,\n    user\n  } = useContext(AuthContext);\n  const [filteredTasks, setFilteredTasks] = useState(tasks);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setFilteredTasks(tasks);\n  }, [tasks]);\n  const handleFilter = filters => {\n    let filtered = tasks;\n    if (filters.date) {\n      filtered = filtered.filter(task => task.date === filters.date);\n    }\n    if (filters.hospital) {\n      filtered = filtered.filter(task => task.hospital_id === parseInt(filters.hospital));\n    }\n    if (filters.shift) {\n      filtered = filtered.filter(task => task.shift === filters.shift);\n    }\n    if (filters.department) {\n      filtered = filtered.filter(task => task.department === filters.department);\n    }\n    if (filters.qualification) {\n      filtered = filtered.filter(task => task.qualification === filters.qualification);\n    }\n    setFilteredTasks(filtered);\n  };\n  const handleBookClick = taskId => {\n    if (!user) {\n      // If user is not authenticated, redirect to login\n      navigate('/login', {\n        state: {\n          from: `/book/${taskId}`\n        }\n      });\n    } else if (user.type !== 'Doctor') {\n      // If user is not a Doctor, show an error\n      alert('Only Medical Staff can book tasks.');\n    } else {\n      // Redirect to booking form\n      navigate(`/book/${taskId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Available Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: [\"Want to book a task? \", /*#__PURE__*/_jsxDEV(Button, {\n          component: Link,\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(Button, {\n          component: Link,\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 89\n        }, this), \" to get started.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: filteredTasks.map(task => {\n        const hospital = hospitals.find(h => h.hospital_id === task.hospital_id);\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [hospital && /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: hospital.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: hospital.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: task.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Date: \", task.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Shift: \", task.shift]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Qualification: \", task.qualification]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => handleBookClick(task.task_id),\n                children: \"Book Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, task.task_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"4izVYRu7+4dhVS6YVmQhv5uOsII=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Typography","Grid","Card","CardContent","CardActions","Button","Box","Link","useNavigate","AuthContext","FilterBar","jsxDEV","_jsxDEV","TaskList","_s","tasks","hospitals","user","filteredTasks","setFilteredTasks","navigate","handleFilter","filters","filtered","date","filter","task","hospital","hospital_id","parseInt","shift","department","qualification","handleBookClick","taskId","state","from","type","alert","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","sx","mb","textAlign","color","component","to","onFilter","container","spacing","map","find","h","item","xs","sm","md","name","address","size","onClick","task_id","_c","$RefreshReg$"],"sources":["C:/Users/gagan/Documents/onduty-f-20240921T163350Z-001/onduty-f/src/components/Task/TaskList.js"],"sourcesContent":["// src/components/Task/TaskList.js\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { Typography, Grid, Card, CardContent, CardActions, Button, Box } from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\nimport FilterBar from '../Filters/FilterBar';\r\n\r\nfunction TaskList() {\r\n  const { tasks, hospitals, user } = useContext(AuthContext);\r\n  const [filteredTasks, setFilteredTasks] = useState(tasks);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setFilteredTasks(tasks);\r\n  }, [tasks]);\r\n\r\n  const handleFilter = (filters) => {\r\n    let filtered = tasks;\r\n\r\n    if (filters.date) {\r\n      filtered = filtered.filter(task => task.date === filters.date);\r\n    }\r\n\r\n    if (filters.hospital) {\r\n      filtered = filtered.filter(task => task.hospital_id === parseInt(filters.hospital));\r\n    }\r\n\r\n    if (filters.shift) {\r\n      filtered = filtered.filter(task => task.shift === filters.shift);\r\n    }\r\n\r\n    if (filters.department) {\r\n      filtered = filtered.filter(task => task.department === filters.department);\r\n    }\r\n\r\n    if (filters.qualification) {\r\n      filtered = filtered.filter(task => task.qualification === filters.qualification);\r\n    }\r\n\r\n    setFilteredTasks(filtered);\r\n  };\r\n\r\n  const handleBookClick = (taskId) => {\r\n    if (!user) {\r\n      // If user is not authenticated, redirect to login\r\n      navigate('/login', { state: { from: `/book/${taskId}` } });\r\n    } else if (user.type !== 'Doctor') {\r\n      // If user is not a Doctor, show an error\r\n      alert('Only Medical Staff can book tasks.');\r\n    } else {\r\n      // Redirect to booking form\r\n      navigate(`/book/${taskId}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Available Tasks\r\n      </Typography>\r\n      {!user && (\r\n        <Box sx={{ mb: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"h6\" color=\"text.secondary\">\r\n            Want to book a task? <Button component={Link} to=\"/login\">Login</Button> or <Button component={Link} to=\"/register\">Register</Button> to get started.\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      <FilterBar onFilter={handleFilter} />\r\n      <Grid container spacing={4}>\r\n        {filteredTasks.map((task) => {\r\n          const hospital = hospitals.find(h => h.hospital_id === task.hospital_id);\r\n          return (\r\n            <Grid item key={task.task_id} xs={12} sm={6} md={4}>\r\n              <Card>\r\n                {hospital && (\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\">{hospital.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {hospital.address}\r\n                    </Typography>\r\n                  </CardContent>\r\n                )}\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle1\">{task.department}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Date: {task.date}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Shift: {task.shift}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Qualification: {task.qualification}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" onClick={() => handleBookClick(task.task_id)}>\r\n                    Book Now\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}