{"ast":null,"code":"// src/components/Profile/HospitalProfile.js\nimport React,{useContext}from'react';import{Typography,Box,List,ListItem,ListItemText,Divider,Card,CardMedia,CardContent,Button,Paper}from'@mui/material';import{AuthContext}from'../../contexts/AuthContext';import AddTaskForm from'./AddTaskForm';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function HospitalProfile(){const{user,bookings,tasks,hospitals}=useContext(AuthContext);const hospital=hospitals.find(h=>h.hospital_id===user.hospitalId);const hospitalTasks=tasks.filter(t=>t.hospital_id===hospital.hospital_id);const hospitalBookings=bookings.filter(b=>hospitalTasks.some(t=>t.task_id===b.taskId));return/*#__PURE__*/_jsxs(Box,{sx:{maxWidth:1200,mx:'auto',mt:5},children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",height:\"200\",image:hospital.image||'/assets/images/placeholder.png',alt:hospital.name}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",gutterBottom:true,children:[hospital.name,\"'s Profile\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[\"Address: \",hospital.address]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",gutterBottom:true,children:[\"About: \",hospital.about]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",gutterBottom:true,children:[\"Contact: \",hospital.contact]})]})]}),/*#__PURE__*/_jsx(AddTaskForm,{}),/*#__PURE__*/_jsxs(Box,{sx:{mt:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Bookings for Your Tasks\"}),hospitalBookings.length===0?/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"No bookings yet.\"}):/*#__PURE__*/_jsx(List,{children:hospitalBookings.map(booking=>{const task=tasks.find(t=>t.task_id===booking.taskId);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ListItem,{alignItems:\"flex-start\",children:/*#__PURE__*/_jsx(ListItemText,{primary:`Task ID: ${task.task_id} - ${task.department}`,secondary:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.primary\",children:[\"Staff: \",booking.userId]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.primary\",children:[\"Date Booked: \",new Date(booking.bookingDetails.dateBooked).toLocaleString()]}),booking.bookingDetails.comments&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Comments: \",booking.bookingDetails.comments]})]})})}),/*#__PURE__*/_jsx(Divider,{component:\"li\"})]},booking.bookingId);})})]})]});}export default HospitalProfile;","map":{"version":3,"names":["React","useContext","Typography","Box","List","ListItem","ListItemText","Divider","Card","CardMedia","CardContent","Button","Paper","AuthContext","AddTaskForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HospitalProfile","user","bookings","tasks","hospitals","hospital","find","h","hospital_id","hospitalId","hospitalTasks","filter","t","hospitalBookings","b","some","task_id","taskId","sx","maxWidth","mx","mt","children","component","height","image","alt","name","variant","gutterBottom","address","about","contact","length","map","booking","task","alignItems","primary","department","secondary","color","userId","Date","bookingDetails","dateBooked","toLocaleString","comments","bookingId"],"sources":["C:/Users/gagan/Documents/onduty-f-20240921T163350Z-001/onduty-f/src/components/Profile/HospitalProfile.js"],"sourcesContent":["// src/components/Profile/HospitalProfile.js\r\nimport React, { useContext } from 'react';\r\nimport { Typography, Box, List, ListItem, ListItemText, Divider, Card, CardMedia, CardContent, Button, Paper } from '@mui/material';\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\nimport AddTaskForm from './AddTaskForm';\r\n\r\nfunction HospitalProfile() {\r\n  const { user, bookings, tasks, hospitals } = useContext(AuthContext);\r\n  \r\n  const hospital = hospitals.find(h => h.hospital_id === user.hospitalId);\r\n  const hospitalTasks = tasks.filter(t => t.hospital_id === hospital.hospital_id);\r\n  const hospitalBookings = bookings.filter(b => hospitalTasks.some(t => t.task_id === b.taskId));\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1200, mx: 'auto', mt: 5 }}>\r\n      <Card>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"200\"\r\n          image={hospital.image || '/assets/images/placeholder.png'}\r\n          alt={hospital.name}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {hospital.name}'s Profile\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Address: {hospital.address}\r\n          </Typography>\r\n          <Typography variant=\"body1\" gutterBottom>\r\n            About: {hospital.about}\r\n          </Typography>\r\n          <Typography variant=\"body1\" gutterBottom>\r\n            Contact: {hospital.contact}\r\n          </Typography>\r\n          {/* Additional profile update fields can be added here */}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Add Task Form */}\r\n      <AddTaskForm />\r\n\r\n      {/* Bookings Section */}\r\n      <Box sx={{ mt: 4 }}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Bookings for Your Tasks\r\n        </Typography>\r\n        {hospitalBookings.length === 0 ? (\r\n          <Typography variant=\"body1\">No bookings yet.</Typography>\r\n        ) : (\r\n          <List>\r\n            {hospitalBookings.map((booking) => {\r\n              const task = tasks.find(t => t.task_id === booking.taskId);\r\n              return (\r\n                <React.Fragment key={booking.bookingId}>\r\n                  <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText\r\n                      primary={`Task ID: ${task.task_id} - ${task.department}`}\r\n                      secondary={\r\n                        <>\r\n                          <Typography variant=\"body2\" color=\"text.primary\">\r\n                            Staff: {booking.userId}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.primary\">\r\n                            Date Booked: {new Date(booking.bookingDetails.dateBooked).toLocaleString()}\r\n                          </Typography>\r\n                          {booking.bookingDetails.comments && (\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              Comments: {booking.bookingDetails.comments}\r\n                            </Typography>\r\n                          )}\r\n                        </>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </List>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default HospitalProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}