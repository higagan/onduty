{"ast":null,"code":"// src/components/Task/TaskList.js\nimport React,{useContext,useState,useEffect}from'react';import{Typography,Grid,Card,CardContent,CardActions,Button,Box}from'@mui/material';import{Link,useNavigate}from'react-router-dom';import{AuthContext}from'../../contexts/AuthContext';import FilterBar from'../Filters/FilterBar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TaskList(){const{tasks,hospitals,user}=useContext(AuthContext);const[filteredTasks,setFilteredTasks]=useState(tasks);const navigate=useNavigate();useEffect(()=>{setFilteredTasks(tasks);},[tasks]);const handleFilter=filters=>{let filtered=tasks;if(filters.date){filtered=filtered.filter(task=>task.date===filters.date);}if(filters.hospital){filtered=filtered.filter(task=>task.hospital_id===parseInt(filters.hospital));}if(filters.shift){filtered=filtered.filter(task=>task.shift===filters.shift);}if(filters.department){filtered=filtered.filter(task=>task.department===filters.department);}if(filters.qualification){filtered=filtered.filter(task=>task.qualification===filters.qualification);}setFilteredTasks(filtered);};const handleBookClick=taskId=>{if(!user){// If user is not authenticated, redirect to login\nnavigate('/login',{state:{from:`/book/${taskId}`}});}else if(user.type!=='Doctor'){// If user is not a Doctor, show an error\nalert('Only Medical Staff can book tasks.');}else{// Redirect to booking form\nnavigate(`/book/${taskId}`);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,align:\"center\",children:\"Available Tasks\"}),!user&&/*#__PURE__*/_jsx(Box,{sx:{mb:4,textAlign:'center'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"text.secondary\",children:[\"Want to book a task? \",/*#__PURE__*/_jsx(Button,{component:Link,to:\"/login\",children:\"Login\"}),\" or \",/*#__PURE__*/_jsx(Button,{component:Link,to:\"/register\",children:\"Register\"}),\" to get started.\"]})}),/*#__PURE__*/_jsx(FilterBar,{onFilter:handleFilter}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:4,children:filteredTasks.map(task=>{const hospital=hospitals.find(h=>h.hospital_id===task.hospital_id);return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{children:[hospital&&/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:hospital.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:hospital.address})]}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:task.department}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Date: \",task.date]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Shift: \",task.shift]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Qualification: \",task.qualification]})]}),/*#__PURE__*/_jsx(CardActions,{children:/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:()=>handleBookClick(task.task_id),children:\"Book Now\"})})]})},task.task_id);})})]});}export default TaskList;","map":{"version":3,"names":["React","useContext","useState","useEffect","Typography","Grid","Card","CardContent","CardActions","Button","Box","Link","useNavigate","AuthContext","FilterBar","jsx","_jsx","jsxs","_jsxs","TaskList","tasks","hospitals","user","filteredTasks","setFilteredTasks","navigate","handleFilter","filters","filtered","date","filter","task","hospital","hospital_id","parseInt","shift","department","qualification","handleBookClick","taskId","state","from","type","alert","children","variant","gutterBottom","align","sx","mb","textAlign","color","component","to","onFilter","container","spacing","map","find","h","item","xs","sm","md","name","address","size","onClick","task_id"],"sources":["C:/Users/gagan/Documents/onduty-f-20240921T163350Z-001/onduty-f/src/components/Task/TaskList.js"],"sourcesContent":["// src/components/Task/TaskList.js\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { Typography, Grid, Card, CardContent, CardActions, Button, Box } from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\nimport FilterBar from '../Filters/FilterBar';\r\n\r\nfunction TaskList() {\r\n  const { tasks, hospitals, user } = useContext(AuthContext);\r\n  const [filteredTasks, setFilteredTasks] = useState(tasks);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setFilteredTasks(tasks);\r\n  }, [tasks]);\r\n\r\n  const handleFilter = (filters) => {\r\n    let filtered = tasks;\r\n\r\n    if (filters.date) {\r\n      filtered = filtered.filter(task => task.date === filters.date);\r\n    }\r\n\r\n    if (filters.hospital) {\r\n      filtered = filtered.filter(task => task.hospital_id === parseInt(filters.hospital));\r\n    }\r\n\r\n    if (filters.shift) {\r\n      filtered = filtered.filter(task => task.shift === filters.shift);\r\n    }\r\n\r\n    if (filters.department) {\r\n      filtered = filtered.filter(task => task.department === filters.department);\r\n    }\r\n\r\n    if (filters.qualification) {\r\n      filtered = filtered.filter(task => task.qualification === filters.qualification);\r\n    }\r\n\r\n    setFilteredTasks(filtered);\r\n  };\r\n\r\n  const handleBookClick = (taskId) => {\r\n    if (!user) {\r\n      // If user is not authenticated, redirect to login\r\n      navigate('/login', { state: { from: `/book/${taskId}` } });\r\n    } else if (user.type !== 'Doctor') {\r\n      // If user is not a Doctor, show an error\r\n      alert('Only Medical Staff can book tasks.');\r\n    } else {\r\n      // Redirect to booking form\r\n      navigate(`/book/${taskId}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Available Tasks\r\n      </Typography>\r\n      {!user && (\r\n        <Box sx={{ mb: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"h6\" color=\"text.secondary\">\r\n            Want to book a task? <Button component={Link} to=\"/login\">Login</Button> or <Button component={Link} to=\"/register\">Register</Button> to get started.\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      <FilterBar onFilter={handleFilter} />\r\n      <Grid container spacing={4}>\r\n        {filteredTasks.map((task) => {\r\n          const hospital = hospitals.find(h => h.hospital_id === task.hospital_id);\r\n          return (\r\n            <Grid item key={task.task_id} xs={12} sm={6} md={4}>\r\n              <Card>\r\n                {hospital && (\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\">{hospital.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {hospital.address}\r\n                    </Typography>\r\n                  </CardContent>\r\n                )}\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle1\">{task.department}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Date: {task.date}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Shift: {task.shift}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Qualification: {task.qualification}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" onClick={() => handleBookClick(task.task_id)}>\r\n                    Book Now\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC9D,OAASC,UAAU,CAAEC,IAAI,CAAEC,IAAI,CAAEC,WAAW,CAAEC,WAAW,CAAEC,MAAM,CAAEC,GAAG,KAAQ,eAAe,CAC7F,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,OAASC,WAAW,KAAQ,4BAA4B,CACxD,MAAO,CAAAC,SAAS,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,KAAM,CAAEC,KAAK,CAAEC,SAAS,CAAEC,IAAK,CAAC,CAAGrB,UAAU,CAACY,WAAW,CAAC,CAC1D,KAAM,CAACU,aAAa,CAAEC,gBAAgB,CAAC,CAAGtB,QAAQ,CAACkB,KAAK,CAAC,CACzD,KAAM,CAAAK,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9BT,SAAS,CAAC,IAAM,CACdqB,gBAAgB,CAACJ,KAAK,CAAC,CACzB,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAM,YAAY,CAAIC,OAAO,EAAK,CAChC,GAAI,CAAAC,QAAQ,CAAGR,KAAK,CAEpB,GAAIO,OAAO,CAACE,IAAI,CAAE,CAChBD,QAAQ,CAAGA,QAAQ,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACF,IAAI,GAAKF,OAAO,CAACE,IAAI,CAAC,CAChE,CAEA,GAAIF,OAAO,CAACK,QAAQ,CAAE,CACpBJ,QAAQ,CAAGA,QAAQ,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACE,WAAW,GAAKC,QAAQ,CAACP,OAAO,CAACK,QAAQ,CAAC,CAAC,CACrF,CAEA,GAAIL,OAAO,CAACQ,KAAK,CAAE,CACjBP,QAAQ,CAAGA,QAAQ,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACI,KAAK,GAAKR,OAAO,CAACQ,KAAK,CAAC,CAClE,CAEA,GAAIR,OAAO,CAACS,UAAU,CAAE,CACtBR,QAAQ,CAAGA,QAAQ,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACK,UAAU,GAAKT,OAAO,CAACS,UAAU,CAAC,CAC5E,CAEA,GAAIT,OAAO,CAACU,aAAa,CAAE,CACzBT,QAAQ,CAAGA,QAAQ,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACM,aAAa,GAAKV,OAAO,CAACU,aAAa,CAAC,CAClF,CAEAb,gBAAgB,CAACI,QAAQ,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAU,eAAe,CAAIC,MAAM,EAAK,CAClC,GAAI,CAACjB,IAAI,CAAE,CACT;AACAG,QAAQ,CAAC,QAAQ,CAAE,CAAEe,KAAK,CAAE,CAAEC,IAAI,CAAE,SAASF,MAAM,EAAG,CAAE,CAAC,CAAC,CAC5D,CAAC,IAAM,IAAIjB,IAAI,CAACoB,IAAI,GAAK,QAAQ,CAAE,CACjC;AACAC,KAAK,CAAC,oCAAoC,CAAC,CAC7C,CAAC,IAAM,CACL;AACAlB,QAAQ,CAAC,SAASc,MAAM,EAAE,CAAC,CAC7B,CACF,CAAC,CAED,mBACErB,KAAA,QAAA0B,QAAA,eACE5B,IAAA,CAACZ,UAAU,EAACyC,OAAO,CAAC,IAAI,CAACC,YAAY,MAACC,KAAK,CAAC,QAAQ,CAAAH,QAAA,CAAC,iBAErD,CAAY,CAAC,CACZ,CAACtB,IAAI,eACJN,IAAA,CAACN,GAAG,EAACsC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAN,QAAA,cACtC1B,KAAA,CAACd,UAAU,EAACyC,OAAO,CAAC,IAAI,CAACM,KAAK,CAAC,gBAAgB,CAAAP,QAAA,EAAC,uBACzB,cAAA5B,IAAA,CAACP,MAAM,EAAC2C,SAAS,CAAEzC,IAAK,CAAC0C,EAAE,CAAC,QAAQ,CAAAT,QAAA,CAAC,OAAK,CAAQ,CAAC,OAAI,cAAA5B,IAAA,CAACP,MAAM,EAAC2C,SAAS,CAAEzC,IAAK,CAAC0C,EAAE,CAAC,WAAW,CAAAT,QAAA,CAAC,UAAQ,CAAQ,CAAC,mBACvI,EAAY,CAAC,CACV,CACN,cACD5B,IAAA,CAACF,SAAS,EAACwC,QAAQ,CAAE5B,YAAa,CAAE,CAAC,cACrCV,IAAA,CAACX,IAAI,EAACkD,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAZ,QAAA,CACxBrB,aAAa,CAACkC,GAAG,CAAE1B,IAAI,EAAK,CAC3B,KAAM,CAAAC,QAAQ,CAAGX,SAAS,CAACqC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1B,WAAW,GAAKF,IAAI,CAACE,WAAW,CAAC,CACxE,mBACEjB,IAAA,CAACX,IAAI,EAACuD,IAAI,MAAoBC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAnB,QAAA,cACjD1B,KAAA,CAACZ,IAAI,EAAAsC,QAAA,EACFZ,QAAQ,eACPd,KAAA,CAACX,WAAW,EAAAqC,QAAA,eACV5B,IAAA,CAACZ,UAAU,EAACyC,OAAO,CAAC,IAAI,CAAAD,QAAA,CAAEZ,QAAQ,CAACgC,IAAI,CAAa,CAAC,cACrDhD,IAAA,CAACZ,UAAU,EAACyC,OAAO,CAAC,OAAO,CAACM,KAAK,CAAC,gBAAgB,CAAAP,QAAA,CAC/CZ,QAAQ,CAACiC,OAAO,CACP,CAAC,EACF,CACd,cACD/C,KAAA,CAACX,WAAW,EAAAqC,QAAA,eACV5B,IAAA,CAACZ,UAAU,EAACyC,OAAO,CAAC,WAAW,CAAAD,QAAA,CAAEb,IAAI,CAACK,UAAU,CAAa,CAAC,cAC9DlB,KAAA,CAACd,UAAU,EAACyC,OAAO,CAAC,OAAO,CAACM,KAAK,CAAC,gBAAgB,CAAAP,QAAA,EAAC,QAC3C,CAACb,IAAI,CAACF,IAAI,EACN,CAAC,cACbX,KAAA,CAACd,UAAU,EAACyC,OAAO,CAAC,OAAO,CAACM,KAAK,CAAC,gBAAgB,CAAAP,QAAA,EAAC,SAC1C,CAACb,IAAI,CAACI,KAAK,EACR,CAAC,cACbjB,KAAA,CAACd,UAAU,EAACyC,OAAO,CAAC,OAAO,CAACM,KAAK,CAAC,gBAAgB,CAAAP,QAAA,EAAC,iBAClC,CAACb,IAAI,CAACM,aAAa,EACxB,CAAC,EACF,CAAC,cACdrB,IAAA,CAACR,WAAW,EAAAoC,QAAA,cACV5B,IAAA,CAACP,MAAM,EAACyD,IAAI,CAAC,OAAO,CAACC,OAAO,CAAEA,CAAA,GAAM7B,eAAe,CAACP,IAAI,CAACqC,OAAO,CAAE,CAAAxB,QAAA,CAAC,UAEnE,CAAQ,CAAC,CACE,CAAC,EACV,CAAC,EA3BOb,IAAI,CAACqC,OA4Bf,CAAC,CAEX,CAAC,CAAC,CACE,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAjD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}